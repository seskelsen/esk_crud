openapi: 3.0.3
info:
  title: API de Fornecedores
  version: v1
  description: API para gerenciamento de fornecedores com autenticação JWT

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: Mensagem de erro

    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: admin123

    LoginResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        token:
          type: string
          example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
        user:
          type: object
          properties:
            id:
              type: string
              example: usr_123
            username:
              type: string
              example: admin
            email:
              type: string
              example: admin@example.com
            role:
              type: string
              example: admin

    RegisterRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: newuser
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          example: password123

    User:
      type: object
      properties:
        id:
          type: string
          example: usr_123
        username:
          type: string
          example: admin
        email:
          type: string
          format: email
          example: admin@example.com
        role:
          type: string
          enum: [admin, user]
          example: admin
        active:
          type: boolean
          example: true

    Supplier:
      type: object
      properties:
        id:
          type: string
          example: sup_123
        name:
          type: string
          example: Empresa ABC Ltda
        cnpj:
          type: string
          example: "00000000000000"
        email:
          type: string
          format: email
          example: contato@empresa.com
        phone:
          type: string
          example: "00000000000"

    SupplierInput:
      type: object
      required:
        - name
        - cnpj
        - email
        - phone
      properties:
        name:
          type: string
          example: Empresa ABC Ltda
        cnpj:
          type: string
          example: "00000000000000"
        email:
          type: string
          format: email
          example: contato@empresa.com
        phone:
          type: string
          example: "00000000000"

security:
  - bearerAuth: []

paths:
  /auth/login:
    post:
      tags:
        - Autenticação
      summary: Login de usuário
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login bem sucedido
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/register:
    post:
      tags:
        - Autenticação
      summary: Registro de novo usuário
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Usuário registrado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      tags:
        - Usuários
      summary: Lista todos os usuários
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/User'
        '403':
          description: Acesso negado (requer admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Usuários
      summary: Obtém um usuário específico
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '403':
          description: Acesso negado (requer admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Usuários
      summary: Atualiza um usuário
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Usuário atualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/User'
        '403':
          description: Acesso negado (requer admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Usuários
      summary: Remove um usuário
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Usuário removido com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Usuário removido com sucesso
        '403':
          description: Acesso negado (requer admin)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /:
    get:
      tags:
        - Fornecedores
      summary: Lista todos os fornecedores
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de fornecedores
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/Supplier'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Fornecedores
      summary: Cria um novo fornecedor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierInput'
      responses:
        '201':
          description: Fornecedor criado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Supplier'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - Fornecedores
      summary: Obtém um fornecedor específico
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Fornecedor encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Supplier'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Fornecedor não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Fornecedores
      summary: Atualiza um fornecedor
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierInput'
      responses:
        '200':
          description: Fornecedor atualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Supplier'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Fornecedor não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Fornecedores
      summary: Remove um fornecedor
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Fornecedor removido com sucesso
        '401':
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Fornecedor não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /openapi.yaml:
    get:
      tags:
        - Documentação
      summary: Obtém a especificação OpenAPI
      security: []
      responses:
        '200':
          description: Especificação OpenAPI